{"version":3,"file":"ng-http-loader.js.map","sources":["ng://ng-http-loader/lib/components/abstract.loader.component.ts","ng://ng-http-loader/lib/components/sk-chasing-dots/sk-chasing-dots.component.ts","ng://ng-http-loader/lib/components/sk-cube-grid/sk-cube-grid.component.ts","ng://ng-http-loader/lib/components/sk-double-bounce/sk-double-bounce.component.ts","ng://ng-http-loader/lib/components/sk-rotating-plane/sk-rotating-plane.component.ts","ng://ng-http-loader/lib/components/sk-spinner-pulse/sk-spinner-pulse.component.ts","ng://ng-http-loader/lib/components/sk-three-bounce/sk-three-bounce.component.ts","ng://ng-http-loader/lib/components/sk-wandering-cubes/sk-wandering-cubes.component.ts","ng://ng-http-loader/lib/components/sk-wave/sk-wave.component.ts","ng://ng-http-loader/lib/services/pending-interceptor.service.ts","ng://ng-http-loader/lib/services/spinner-visibility.service.ts","ng://ng-http-loader/lib/spinkits.ts","ng://ng-http-loader/lib/components/ng-http-loader.component.ts","ng://ng-http-loader/lib/ng-http-loader.module.ts"],"sourcesContent":["/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Input } from '@angular/core';\n\nexport abstract class AbstractLoader {\n\n    @Input()\n    public backgroundColor: string;\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component } from '@angular/core';\nimport { AbstractLoader } from '../abstract.loader.component';\n\n@Component({\n    selector: 'sk-chasing-dots',\n    templateUrl: './sk-chasing-dots.component.html',\n    styleUrls: ['./sk-chasing-dots.component.scss']\n})\nexport class SkChasingDotsComponent extends AbstractLoader {\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component } from '@angular/core';\nimport { AbstractLoader } from '../abstract.loader.component';\n\n@Component({\n    selector: 'sk-cube-grid',\n    templateUrl: './sk-cube-grid.component.html',\n    styleUrls: ['./sk-cube-grid.component.scss']\n})\nexport class SkCubeGridComponent extends AbstractLoader {\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component } from '@angular/core';\nimport { AbstractLoader } from '../abstract.loader.component';\n\n@Component({\n    selector: 'sk-double-bounce',\n    templateUrl: './sk-double-bounce.component.html',\n    styleUrls: ['./sk-double-bounce.component.scss']\n})\nexport class SkDoubleBounceComponent extends AbstractLoader {\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component } from '@angular/core';\nimport { AbstractLoader } from '../abstract.loader.component';\n\n@Component({\n    selector: 'sk-rotating-plane',\n    templateUrl: './sk-rotating-plane.component.html',\n    styleUrls: ['./sk-rotating-plane.component.scss']\n})\nexport class SkRotatingPlaneComponent extends AbstractLoader {\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component } from '@angular/core';\nimport { AbstractLoader } from '../abstract.loader.component';\n\n@Component({\n    selector: 'sk-spinner-pulse',\n    templateUrl: './sk-spinner-pulse.component.html',\n    styleUrls: ['./sk-spinner-pulse.component.scss']\n})\nexport class SkSpinnerPulseComponent extends AbstractLoader {\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component } from '@angular/core';\nimport { AbstractLoader } from '../abstract.loader.component';\n\n@Component({\n    selector: 'sk-three-bounce',\n    templateUrl: './sk-three-bounce.component.html',\n    styleUrls: ['./sk-three-bounce.component.scss']\n})\nexport class SkThreeBounceComponent extends AbstractLoader {\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component } from '@angular/core';\nimport { AbstractLoader } from '../abstract.loader.component';\n\n@Component({\n    selector: 'sk-wandering-cubes',\n    templateUrl: './sk-wandering-cubes.component.html',\n    styleUrls: ['./sk-wandering-cubes.component.scss']\n})\nexport class SkWanderingCubesComponent extends AbstractLoader {\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component } from '@angular/core';\nimport { AbstractLoader } from '../abstract.loader.component';\n\n@Component({\n    selector: 'sk-wave',\n    templateUrl: './sk-wave.component.html',\n    styleUrls: ['./sk-wave.component.scss']\n})\nexport class SkWaveComponent extends AbstractLoader {\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { ExistingProvider, Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\nimport { catchError, finalize, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PendingInterceptorService implements HttpInterceptor {\n    private _pendingRequests = 0;\n    private _pendingRequestsStatus: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n    private _filteredUrlPatterns: RegExp[] = [];\n    private _filteredMethods: string[] = [];\n    private _filteredHeaders: string[] = [];\n    private _forceByPass: boolean;\n\n    get pendingRequestsStatus$(): Observable<boolean> {\n        return this._pendingRequestsStatus.asObservable();\n    }\n\n    get pendingRequests(): number {\n        return this._pendingRequests;\n    }\n\n    get filteredUrlPatterns(): RegExp[] {\n        return this._filteredUrlPatterns;\n    }\n\n    set filteredMethods(httpMethods: string[]) {\n        this._filteredMethods = httpMethods;\n    }\n\n    set filteredHeaders(value: string[]) {\n        this._filteredHeaders = value;\n    }\n\n    set forceByPass(value: boolean) {\n        this._forceByPass = value;\n    }\n\n    private shouldBypassUrl(url: string): boolean {\n        return this._filteredUrlPatterns.some(e => {\n            return e.test(url);\n        });\n    }\n\n    private shouldBypassMethod(req: HttpRequest<any>): boolean {\n        return this._filteredMethods.some(e => {\n            return e.toUpperCase() === req.method.toUpperCase();\n        });\n    }\n\n    private shouldBypassHeader(req: HttpRequest<any>): boolean {\n        return this._filteredHeaders.some(e => {\n            return req.headers.has(e);\n        });\n    }\n\n    private shouldBypass(req: HttpRequest<any>): boolean {\n        return this.shouldBypassUrl(req.urlWithParams)\n            || this.shouldBypassMethod(req)\n            || this.shouldBypassHeader(req)\n            || this._forceByPass;\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const shouldBypass = this.shouldBypass(req);\n\n        if (!shouldBypass) {\n            this._pendingRequests++;\n\n            if (1 === this._pendingRequests) {\n                this._pendingRequestsStatus.next(true);\n            }\n        }\n\n        return next.handle(req).pipe(\n            map(event => {\n                return event;\n            }),\n            catchError(error => {\n                return throwError(error);\n            }),\n            finalize(() => {\n                if (!shouldBypass) {\n                    this._pendingRequests--;\n\n                    if (0 === this._pendingRequests) {\n                        this._pendingRequestsStatus.next(false);\n                    }\n                }\n            })\n        );\n    }\n}\n\nexport const PendingInterceptorServiceInterceptor: ExistingProvider[] = [{\n    provide: HTTP_INTERCEPTORS,\n    useExisting: PendingInterceptorService,\n    multi: true\n}];\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { PendingInterceptorService } from './pending-interceptor.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpinnerVisibilityService {\n    private _visibilitySubject: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n\n    constructor(private pendingInterceptorService: PendingInterceptorService) {\n    }\n\n    get visibilityObservable$(): Observable<boolean> {\n        return this._visibilitySubject.asObservable();\n    }\n\n    public show(): void {\n        this.pendingInterceptorService.forceByPass = true;\n        this._visibilitySubject.next(true);\n    }\n\n    public hide(): void {\n        this._visibilitySubject.next(false);\n        this.pendingInterceptorService.forceByPass = false;\n    }\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { SkChasingDotsComponent } from './components/sk-chasing-dots/sk-chasing-dots.component';\nimport { SkCubeGridComponent } from './components/sk-cube-grid/sk-cube-grid.component';\nimport { SkDoubleBounceComponent } from './components/sk-double-bounce/sk-double-bounce.component';\nimport { SkRotatingPlaneComponent } from './components/sk-rotating-plane/sk-rotating-plane.component';\nimport { SkSpinnerPulseComponent } from './components/sk-spinner-pulse/sk-spinner-pulse.component';\nimport { SkThreeBounceComponent } from './components/sk-three-bounce/sk-three-bounce.component';\nimport { SkWanderingCubesComponent } from './components/sk-wandering-cubes/sk-wandering-cubes.component';\nimport { SkWaveComponent } from './components/sk-wave/sk-wave.component';\n\nexport const Spinkit = {\n    skChasingDots: 'sk-chasing-dots',\n    skCubeGrid: 'sk-cube-grid',\n    skDoubleBounce: 'sk-double-bounce',\n    skRotatingPlane: 'sk-rotationg-plane',\n    skSpinnerPulse: 'sk-spinner-pulse',\n    skThreeBounce: 'sk-three-bounce',\n    skWanderingCubes: 'sk-wandering-cubes',\n    skWave: 'sk-wave',\n};\n\nexport const SPINKIT_COMPONENTS = [\n    SkCubeGridComponent,\n    SkChasingDotsComponent,\n    SkDoubleBounceComponent,\n    SkRotatingPlaneComponent,\n    SkSpinnerPulseComponent,\n    SkThreeBounceComponent,\n    SkWanderingCubesComponent,\n    SkWaveComponent,\n];\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { merge, Observable, Subscription, timer } from 'rxjs';\nimport { debounce, distinctUntilChanged, partition, switchMap } from 'rxjs/operators';\nimport { PendingInterceptorService } from '../services/pending-interceptor.service';\nimport { SpinnerVisibilityService } from '../services/spinner-visibility.service';\nimport { Spinkit } from '../spinkits';\n\n@Component({\n    selector: 'ng-http-loader',\n    templateUrl: './ng-http-loader.component.html',\n    styleUrls: ['./ng-http-loader.component.scss']\n})\nexport class NgHttpLoaderComponent implements OnDestroy, OnInit {\n    public isSpinnerVisible: boolean;\n    public spinkit = Spinkit;\n    private subscriptions: Subscription;\n    private visibleUntil: number = Date.now();\n\n    @Input()\n    public backgroundColor: string;\n    @Input()\n    public spinner = Spinkit.skCubeGrid;\n    @Input()\n    public filteredUrlPatterns: string[] = [];\n    @Input()\n    public filteredMethods: string[] = [];\n    @Input()\n    public filteredHeaders: string[] = [];\n    @Input()\n    public debounceDelay = 0;\n    @Input()\n    public minDuration = 0;\n    @Input()\n    public extraDuration = 0;\n    @Input()\n    public entryComponent: any = null;\n\n    constructor(private pendingInterceptorService: PendingInterceptorService, private spinnerVisibilityService: SpinnerVisibilityService) {\n        const [showSpinner$, hideSpinner$] = partition((h: boolean) => h)(this.pendingInterceptorService.pendingRequestsStatus$);\n\n        this.subscriptions = merge(\n            this.pendingInterceptorService.pendingRequestsStatus$.pipe(\n                switchMap(() => showSpinner$.pipe(debounce(() => timer(this.debounceDelay))))\n            ),\n            showSpinner$.pipe(\n                switchMap(() => hideSpinner$.pipe(debounce(() => this.getVisibilityTimer())))\n            ),\n            this.spinnerVisibilityService.visibilityObservable$,\n        )\n            .pipe(distinctUntilChanged())\n            .subscribe(h => this.handleSpinnerVisibility(h));\n    }\n\n    ngOnInit(): void {\n        this.nullifySpinnerIfEntryComponentIsDefined();\n        this.initFilters();\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.unsubscribe();\n    }\n\n    private nullifySpinnerIfEntryComponentIsDefined(): void {\n        if (null != this.entryComponent) {\n            this.spinner = null;\n        }\n    }\n\n    private initFilters(): void {\n        this.initFilteredUrlPatterns();\n        this.initFilteredMethods();\n        this.initFilteredHeaders();\n    }\n\n    private initFilteredUrlPatterns(): void {\n        if (!(this.filteredUrlPatterns instanceof Array)) {\n            throw new TypeError('`filteredUrlPatterns` must be an array.');\n        }\n\n        if (!!this.filteredUrlPatterns.length) {\n            this.filteredUrlPatterns.forEach(e =>\n                this.pendingInterceptorService.filteredUrlPatterns.push(new RegExp(e))\n            );\n        }\n    }\n\n    private initFilteredMethods(): void {\n        if (!(this.filteredMethods instanceof Array)) {\n            throw new TypeError('`filteredMethods` must be an array.');\n        }\n        this.pendingInterceptorService.filteredMethods = this.filteredMethods;\n    }\n\n    private initFilteredHeaders(): void {\n        if (!(this.filteredHeaders instanceof Array)) {\n            throw new TypeError('`filteredHeaders` must be an array.');\n        }\n        this.pendingInterceptorService.filteredHeaders = this.filteredHeaders;\n    }\n\n    private handleSpinnerVisibility(showSpinner: boolean): void {\n        if (showSpinner) {\n            this.visibleUntil = Date.now() + this.minDuration;\n        }\n        this.isSpinnerVisible = showSpinner;\n    }\n\n    private getVisibilityTimer(): Observable<number> {\n        return timer(Math.max(this.extraDuration, this.visibleUntil - Date.now()));\n    }\n}\n","/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { NgHttpLoaderComponent } from './components/ng-http-loader.component';\nimport { PendingInterceptorServiceInterceptor } from './services/pending-interceptor.service';\nimport { SPINKIT_COMPONENTS } from './spinkits';\n\n@NgModule({\n    declarations: [\n        NgHttpLoaderComponent,\n        ...SPINKIT_COMPONENTS,\n    ],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n    ],\n    exports: [\n        NgHttpLoaderComponent,\n        ...SPINKIT_COMPONENTS,\n    ],\n    providers: [\n        PendingInterceptorServiceInterceptor,\n    ]\n})\nexport class NgHttpLoaderModule {\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}
